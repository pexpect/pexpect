name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  FORCE_COLOR: 1

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-22.04"]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "pypy3.9"]
        include:
          # Python < 3.7 is not available on ubuntu-22.04
          - os: "ubuntu-20.04"
            python-version: "3.5"
          - os: "ubuntu-20.04"
            python-version: "3.6"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true

    - name: Install packages
      run: |
        sudo apt-get install --yes zsh
        export PYTHONIOENCODING=UTF8
        pip install -r requirements-testing.txt

    - name: Run tests
      run: |
        ./tools/display-sighandlers.py
        ./tools/display-terminalinfo.py
        pytest --cov pexpect --cov-config .coveragerc

    - name: Check coverage
      if: github.repository_owner == 'pexpect'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        coveralls --service=github

  test-legacy:
    name: Test Python ${{ matrix.python-version }} using Docker
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.4'
          - '2.7'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Python ${{ matrix.python-version }} Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: PYTHON=${{ matrix.python-version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true
          tags: pexpect
      - name: Run tests
        run: docker run pexpect
